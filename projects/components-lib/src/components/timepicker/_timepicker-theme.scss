@use "sass:color";
@use "sass:map";
@use "@angular/material" as mat;

$timepicker-content-title-font-size: 10px !default;
$input-font-size: 2rem !default;
$inputs-separator-font-size: 3rem !default;
$inputs-separator-line-height: 1.25rem;
$primary-opacity: 0.15;

@mixin _color($palette) {
  .mat-time-period-item-active,
  .mat-clock-dial-value.mat-clock-dial-value-active {
    color: mat.get-color-from-palette($palette);
    background-color: mat.get-color-from-palette($palette, $primary-opacity);
  }

  .mat-clock-dial::before {
    background-color: mat.get-color-from-palette($palette);
  }

  .mat-clock-dial-hand:not(.mat-clock-dial-hand-disabled) {
    background-color: mat.get-color-from-palette($palette);

    &::before {
      background-color: mat.get-color-from-palette($palette);
    }
  }

  .mat-clock-dial-hand.mat-clock-dial-hand-disabled {
    &::before {
      background-color: color.adjust(
        mat.get-color-from-palette($palette),
        $alpha: -0.6
      );
    }
  }

  [mat-mini-fab].mat-clock-dial-cell.mat-button-disabled.mat-clock-dial-cell-active {
    background-color: color.adjust(
      mat.get-color-from-palette($palette),
      $alpha: -0.6
    );
  }
}

@mixin color($config-or-theme) {
  $config: mat.get-color-config($config-or-theme);
  $is-dark-theme: map.get($config, is-dark);
  $primary: map.get($config, primary);
  $accent: map.get($config, accent);
  $warn: map.get($config, warn);
  $foreground: map.get($config, foreground);
  $background: map.get($config, background);

  @include _color(map.get($config, primary));

  .mat-timepicker-content {
    @include mat.elevation(4);
    background-color: mat.get-color-from-palette($background, card);
    color: mat.get-color-from-palette($foreground, text);

    &.mat-accent {
      @include _color(map.get($config, accent));
    }

    &.mat-warn {
      @include _color(map.get($config, warn));
    }
  }

  .mat-timepicker-content-layout-title {
    color: mat.get-color-from-palette($foreground, secondary-text);
  }

  .mat-time-toggle-mode-button svg {
    fill: mat.get-color-from-palette($foreground, secondary-text);
  }

  .mat-time-period {
    border-color: mat.get-color-from-palette($foreground, divider);
  }

  .mat-time-period-item-disabled {
    color: mat.get-color-from-palette($foreground, disabled-button);
    background-color: mat.get-color-from-palette($background, disabled-button);
  }

  .mat-clock-dial-value,
  .mat-clock-dial {
    background-color: mat.get-color-from-palette($background, background);
  }

  .mat-clock-dial-hand.mat-clock-dial-hand-disabled {
    background-color: transparent;
  }

  [mat-mini-fab]:not(.mat-primary):not(.mat-accent):not(.mat-warn) {
    background: transparent;

    &:hover {
      background-color: mat.get-color-from-palette($background, hover);
    }
  }
}

@mixin typography($config-or-theme) {
  $config: mat.get-typography-config($config-or-theme);

  h6.mat-timepicker-content-layout-title {
    font: {
      size: $timepicker-content-title-font-size;
      weight: mat.font-weight($config, body-2);
    }
  }

  .mat-time-inputs-field {
    input.mat-input-element {
      font-size: $input-font-size;
      line-height: normal;
    }
  }

  .mat-timepicker-content-layout-separator {
    font-size: $inputs-separator-font-size;
    line-height: $inputs-separator-line-height;
  }

  .mat-clock-dial-value {
    font-size: $input-font-size;
  }
}

@mixin theme($theme-or-color-config) {
  $color: mat.get-color-config($theme-or-color-config);
  $typography: mat.get-typography-config($theme-or-color-config);

  @if $color != null {
    @include color($color);
  }

  @if $typography != null {
    @include typography($typography);
  } @else {
    $typography: mat.define-typography-config();
    @include typography($typography);
  }
}
